import { SvelteComponent } from "svelte";
type Column = {
    blocks: BuilderBlock[];
    width?: number;
};
type StackColumnsAt = "tablet" | "mobile" | "never";
export interface ColumnProps extends BuilderComponentsProp {
    columns?: Column[];
    builderBlock: BuilderBlock;
    space?: number;
    stackColumnsAt?: StackColumnsAt;
    reverseColumnsWhenStacked?: boolean;
}
import type { BuilderBlock } from "../../types/builder-block.js";
import type { BuilderComponentsProp, PropsWithBuilderData } from "../../types/builder-props.js";
declare const __propDef: {
    props: {
        js: any;
        space?: PropsWithBuilderData<ColumnProps>["space"];
        columns?: PropsWithBuilderData<ColumnProps>["columns"];
        stackColumnsAt?: PropsWithBuilderData<ColumnProps>["stackColumnsAt"];
        reverseColumnsWhenStacked?: PropsWithBuilderData<ColumnProps>["reverseColumnsWhenStacked"];
        builderContext: PropsWithBuilderData<ColumnProps>["builderContext"];
        builderBlock: PropsWithBuilderData<ColumnProps>["builderBlock"];
        builderComponents: PropsWithBuilderData<ColumnProps>["builderComponents"];
    };
    events: {
        [evt: string]: CustomEvent<any>;
    };
    slots: {};
};
export type ColumnsProps = typeof __propDef.props;
export type ColumnsEvents = typeof __propDef.events;
export type ColumnsSlots = typeof __propDef.slots;
export default class Columns extends SvelteComponent<ColumnsProps, ColumnsEvents, ColumnsSlots> {
}
export {};
