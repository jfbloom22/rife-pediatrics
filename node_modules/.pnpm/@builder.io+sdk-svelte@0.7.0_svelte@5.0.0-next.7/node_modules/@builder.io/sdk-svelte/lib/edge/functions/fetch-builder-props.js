import { getBuilderSearchParams } from './get-builder-search-params/index.js';
import { fetchOneEntry } from './get-content/index.js';
/**
 * Given an `apiKey` and `url` (or `path` + `searchParams`), provides all props that `Content` needs to render Builder Content.
 *
 * @example
 * ```jsx
 * const builderProps = await fetchBuilderProps({
 *    apiKey: 'API_KEY',
 *    // provide `url`
 *    url: yourPageUrl,
 *    // OR provide `path` + `searchParams`
 *    path: yourPath,
 *    searchParams: yourSearchParams,
 * });
 *
 * return <Content {...builderProps} />;
 * ```
 */
export const fetchBuilderProps = async (_args) => {
    const urlPath = _args.path || _args.url?.pathname || _args.userAttributes?.urlPath;
    const getContentArgs = {
        ..._args,
        apiKey: _args.apiKey,
        model: _args.model || 'page',
        userAttributes: {
            ..._args.userAttributes,
            ...(urlPath ? {
                urlPath
            } : {})
        },
        options: getBuilderSearchParams(_args.searchParams || _args.url?.searchParams || _args.options)
    };
    return {
        apiKey: getContentArgs.apiKey,
        model: getContentArgs.model,
        content: await fetchOneEntry(getContentArgs)
    };
};
