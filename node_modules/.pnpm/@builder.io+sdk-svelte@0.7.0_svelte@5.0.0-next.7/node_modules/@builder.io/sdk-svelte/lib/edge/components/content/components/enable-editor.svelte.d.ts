import { SvelteComponent } from "svelte";
type BuilderEditorProps = Omit<ContentProps, "customComponents" | "data" | "apiVersion" | "isSsrAbTest"> & {
    builderContextSignal: Writable<BuilderContextInterface>;
    setBuilderContextSignal?: (signal: any) => any;
    children?: any;
};
import type { BuilderContextInterface } from "../../../context/types.js";
import type { ContentProps } from "../content.types.js";
import type { Writable } from "svelte/store";
declare const __propDef: {
    props: {
        builderContextSignal: BuilderEditorProps["builderContextSignal"];
        model?: BuilderEditorProps["model"];
        context?: BuilderEditorProps["context"];
        canTrack?: BuilderEditorProps["canTrack"];
        apiKey: BuilderEditorProps["apiKey"];
        showContent: BuilderEditorProps["showContent"];
        classNameProp: BuilderEditorProps["classNameProp"];
        content?: BuilderEditorProps["content"];
        locale?: BuilderEditorProps["locale"];
        includeRefs?: BuilderEditorProps["includeRefs"];
        enrich?: BuilderEditorProps["enrich"];
    };
    events: {
        [evt: string]: CustomEvent<any>;
    };
    slots: {
        default: {};
    };
};
export type EnableEditorProps = typeof __propDef.props;
export type EnableEditorEvents = typeof __propDef.events;
export type EnableEditorSlots = typeof __propDef.slots;
export default class EnableEditor extends SvelteComponent<EnableEditorProps, EnableEditorEvents, EnableEditorSlots> {
}
export {};
